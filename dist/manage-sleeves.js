async function setSleevesTask(ns) {
    for (var i = 0; i < ns.sleeve.getNumSleeves(); i++) {
        const sleeve = ns.sleeve.getSleeve(i);
        ns.print(`Sleeve ${i} has:`);
        ns.print(`- sync=${sleeve.sync}`);
        ns.print(`- shock=${sleeve.shock}`);
        ns.print(`--------------------------------------------`);
        if (sleeve.sync < 100) {
            ns.print('Synchronize');
            ns.sleeve.setToSynchronize(i);
        }
        else if (sleeve.shock > 0) {
            ns.print('Shock recovery');
            ns.sleeve.setToShockRecovery(i);
        }
        else {
            ns.print('Manual task');
            // Ref: https://github.com/danielyxie/bitburner/blob/dev/src/Enums.ts
            // ns.sleeve.setToCommitCrime(i, 'Assassination');
            // ns.sleeve.setToCommitCrime(i, 'Heist');
            ns.sleeve.setToCommitCrime(i, 'Mug');
            // ns.sleeve.setToCommitCrime(i, 'Homicide');
            // ns.sleeve.setToUniversityCourse(i, 'Rothman University', 'Computer Science');
            // ns.sleeve.setToUniversityCourse(i, 'Rothman University', 'Algorithms');
        }
    }
}
export async function main(ns) {
    ns.disableLog('sleep');
    while (true) {
        await setSleevesTask(ns);
        await ns.sleep(1000 * 15);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXNsZWV2ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zY3JpcHRzL21hbmFnZS1zbGVldmVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLEtBQUssVUFBVSxjQUFjLENBQUMsRUFBTTtJQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNsRCxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QixFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDbEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ3BDLEVBQUUsQ0FBQyxLQUFLLENBQUMsOENBQThDLENBQUMsQ0FBQztRQUV6RCxJQUFJLE1BQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxFQUFFO1lBQ3JCLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDeEIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvQjthQUFNLElBQUksTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDM0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzNCLEVBQUUsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDakM7YUFBTTtZQUNMLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDeEIscUVBQXFFO1lBQ3JFLGtEQUFrRDtZQUNsRCwwQ0FBMEM7WUFDMUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDckMsNkNBQTZDO1lBQzdDLGdGQUFnRjtZQUNoRiwwRUFBMEU7U0FDM0U7S0FDRjtBQUNILENBQUM7QUFFRCxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQy9CLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFdkIsT0FBTyxJQUFJLEVBQUU7UUFDWCxNQUFNLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUV6QixNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0tBQzNCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xuXG5hc3luYyBmdW5jdGlvbiBzZXRTbGVldmVzVGFzayhuczogTlMpOiBQcm9taXNlPHZvaWQ+IHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBucy5zbGVldmUuZ2V0TnVtU2xlZXZlcygpOyBpKyspIHtcbiAgICBjb25zdCBzbGVldmUgPSBucy5zbGVldmUuZ2V0U2xlZXZlKGkpO1xuICAgIG5zLnByaW50KGBTbGVldmUgJHtpfSBoYXM6YCk7XG4gICAgbnMucHJpbnQoYC0gc3luYz0ke3NsZWV2ZS5zeW5jfWApO1xuICAgIG5zLnByaW50KGAtIHNob2NrPSR7c2xlZXZlLnNob2NrfWApO1xuICAgIG5zLnByaW50KGAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWApO1xuXG4gICAgaWYgKHNsZWV2ZS5zeW5jIDwgMTAwKSB7XG4gICAgICBucy5wcmludCgnU3luY2hyb25pemUnKTtcbiAgICAgIG5zLnNsZWV2ZS5zZXRUb1N5bmNocm9uaXplKGkpO1xuICAgIH0gZWxzZSBpZiAoc2xlZXZlLnNob2NrID4gMCkge1xuICAgICAgbnMucHJpbnQoJ1Nob2NrIHJlY292ZXJ5Jyk7XG4gICAgICBucy5zbGVldmUuc2V0VG9TaG9ja1JlY292ZXJ5KGkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBucy5wcmludCgnTWFudWFsIHRhc2snKTtcbiAgICAgIC8vIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL2RhbmllbHl4aWUvYml0YnVybmVyL2Jsb2IvZGV2L3NyYy9FbnVtcy50c1xuICAgICAgLy8gbnMuc2xlZXZlLnNldFRvQ29tbWl0Q3JpbWUoaSwgJ0Fzc2Fzc2luYXRpb24nKTtcbiAgICAgIC8vIG5zLnNsZWV2ZS5zZXRUb0NvbW1pdENyaW1lKGksICdIZWlzdCcpO1xuICAgICAgbnMuc2xlZXZlLnNldFRvQ29tbWl0Q3JpbWUoaSwgJ011ZycpO1xuICAgICAgLy8gbnMuc2xlZXZlLnNldFRvQ29tbWl0Q3JpbWUoaSwgJ0hvbWljaWRlJyk7XG4gICAgICAvLyBucy5zbGVldmUuc2V0VG9Vbml2ZXJzaXR5Q291cnNlKGksICdSb3RobWFuIFVuaXZlcnNpdHknLCAnQ29tcHV0ZXIgU2NpZW5jZScpO1xuICAgICAgLy8gbnMuc2xlZXZlLnNldFRvVW5pdmVyc2l0eUNvdXJzZShpLCAnUm90aG1hbiBVbml2ZXJzaXR5JywgJ0FsZ29yaXRobXMnKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKTogUHJvbWlzZTx2b2lkPiB7XG4gIG5zLmRpc2FibGVMb2coJ3NsZWVwJyk7XG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBhd2FpdCBzZXRTbGVldmVzVGFzayhucyk7XG5cbiAgICBhd2FpdCBucy5zbGVlcCgxMDAwICogMTUpO1xuICB9XG59XG4iXX0=