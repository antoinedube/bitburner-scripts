/** @param {NS} ns */
export async function main(ns) {
    ns.disableLog('ALL');
    const SLEEP_DELAY = 15000; // in milliseconds
    const HOME_SERVER = 'home';
    const TOR_ROUTER_PRICE = 200000;
    if (!ns.hasTorRouter()) {
        ns.print('TOR router not purchased yet');
    }
    while (!ns.hasTorRouter()) {
        const moneyAvailable = ns.getServerMoneyAvailable(HOME_SERVER);
        if (TOR_ROUTER_PRICE <= moneyAvailable) {
            if (ns.singularity.purchaseTor()) {
                ns.print('TOR router purchased');
            }
        }
        await ns.sleep(SLEEP_DELAY);
    }
    while (true) {
        const allHackingPrograms = ns.singularity.getDarkwebPrograms();
        const purchasedHackingPrograms = allHackingPrograms.filter((program) => ns.fileExists(program));
        const hackingProgramsToPurchase = allHackingPrograms.filter((program) => !ns.fileExists(program));
        if (purchasedHackingPrograms.length == allHackingPrograms.length) {
            break;
        }
        for (const program of hackingProgramsToPurchase) {
            const programCost = ns.singularity.getDarkwebProgramCost(program);
            const moneyAvailable = ns.getServerMoneyAvailable(HOME_SERVER);
            if (programCost <= moneyAvailable) {
                if (ns.singularity.purchaseProgram(program)) {
                    ns.print(`Purchased ${program}`);
                }
            }
        }
        await ns.sleep(SLEEP_DELAY);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV5LWRhcmt3ZWItcHJvZ3JhbXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zY3JpcHRzL2J1eS1kYXJrd2ViLXByb2dyYW1zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQjtBQUNyQixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDLENBQUUsa0JBQWtCO0lBQzlDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQztJQUMzQixNQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQztJQUVoQyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFO1FBQ3BCLEVBQUUsQ0FBQyxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztLQUM1QztJQUVELE9BQU8sQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUU7UUFDdkIsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRS9ELElBQUksZ0JBQWdCLElBQUksY0FBYyxFQUFFO1lBQ3BDLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDOUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO2FBQ3BDO1NBQ0o7UUFFRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDL0I7SUFFRCxPQUFPLElBQUksRUFBRTtRQUNULE1BQU0sa0JBQWtCLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQy9ELE1BQU0sd0JBQXdCLEdBQUcsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDaEcsTUFBTSx5QkFBeUIsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBRWxHLElBQUksd0JBQXdCLENBQUMsTUFBTSxJQUFJLGtCQUFrQixDQUFDLE1BQU0sRUFBRTtZQUM5RCxNQUFNO1NBQ1Q7UUFFRCxLQUFLLE1BQU0sT0FBTyxJQUFJLHlCQUF5QixFQUFFO1lBQzdDLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbEUsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBRS9ELElBQUksV0FBVyxJQUFJLGNBQWMsRUFBRTtnQkFDL0IsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRTtvQkFDekMsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhLE9BQU8sRUFBRSxDQUFDLENBQUM7aUJBQ3BDO2FBQ0o7U0FDSjtRQUVELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUMvQjtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XG4gICAgbnMuZGlzYWJsZUxvZygnQUxMJyk7XG4gICAgY29uc3QgU0xFRVBfREVMQVkgPSAxNTAwMDsgIC8vIGluIG1pbGxpc2Vjb25kc1xuICAgIGNvbnN0IEhPTUVfU0VSVkVSID0gJ2hvbWUnO1xuICAgIGNvbnN0IFRPUl9ST1VURVJfUFJJQ0UgPSAyMDAwMDA7XG5cbiAgICBpZiAoIW5zLmhhc1RvclJvdXRlcigpKSB7XG4gICAgICAgIG5zLnByaW50KCdUT1Igcm91dGVyIG5vdCBwdXJjaGFzZWQgeWV0Jyk7XG4gICAgfVxuXG4gICAgd2hpbGUgKCFucy5oYXNUb3JSb3V0ZXIoKSkge1xuICAgICAgICBjb25zdCBtb25leUF2YWlsYWJsZSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKEhPTUVfU0VSVkVSKTtcblxuICAgICAgICBpZiAoVE9SX1JPVVRFUl9QUklDRSA8PSBtb25leUF2YWlsYWJsZSkge1xuICAgICAgICAgICAgaWYgKG5zLnNpbmd1bGFyaXR5LnB1cmNoYXNlVG9yKCkpIHtcbiAgICAgICAgICAgICAgICBucy5wcmludCgnVE9SIHJvdXRlciBwdXJjaGFzZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKFNMRUVQX0RFTEFZKTtcbiAgICB9XG5cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCBhbGxIYWNraW5nUHJvZ3JhbXMgPSBucy5zaW5ndWxhcml0eS5nZXREYXJrd2ViUHJvZ3JhbXMoKTtcbiAgICAgICAgY29uc3QgcHVyY2hhc2VkSGFja2luZ1Byb2dyYW1zID0gYWxsSGFja2luZ1Byb2dyYW1zLmZpbHRlcigocHJvZ3JhbSkgPT4gbnMuZmlsZUV4aXN0cyhwcm9ncmFtKSk7XG4gICAgICAgIGNvbnN0IGhhY2tpbmdQcm9ncmFtc1RvUHVyY2hhc2UgPSBhbGxIYWNraW5nUHJvZ3JhbXMuZmlsdGVyKChwcm9ncmFtKSA9PiAhbnMuZmlsZUV4aXN0cyhwcm9ncmFtKSk7XG5cbiAgICAgICAgaWYgKHB1cmNoYXNlZEhhY2tpbmdQcm9ncmFtcy5sZW5ndGggPT0gYWxsSGFja2luZ1Byb2dyYW1zLmxlbmd0aCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnN0IHByb2dyYW0gb2YgaGFja2luZ1Byb2dyYW1zVG9QdXJjaGFzZSkge1xuICAgICAgICAgICAgY29uc3QgcHJvZ3JhbUNvc3QgPSBucy5zaW5ndWxhcml0eS5nZXREYXJrd2ViUHJvZ3JhbUNvc3QocHJvZ3JhbSk7XG4gICAgICAgICAgICBjb25zdCBtb25leUF2YWlsYWJsZSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKEhPTUVfU0VSVkVSKTtcblxuICAgICAgICAgICAgaWYgKHByb2dyYW1Db3N0IDw9IG1vbmV5QXZhaWxhYmxlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5zLnNpbmd1bGFyaXR5LnB1cmNoYXNlUHJvZ3JhbShwcm9ncmFtKSkge1xuICAgICAgICAgICAgICAgICAgICBucy5wcmludChgUHVyY2hhc2VkICR7cHJvZ3JhbX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCBucy5zbGVlcChTTEVFUF9ERUxBWSk7XG4gICAgfVxufVxuIl19